@model List<string>

@{
    ViewBag.Title = "Convert From Uploads";
}

<h2>Convert Video Files from Server Uploads</h2>
<p>To Convert video from uploads folder you need to copy video file to ,/wwwroot/uploads folder first</p>

<div>
    <label>Select Action:</label>
    <select id="actionType" class="form-control mb-2" style="max-width: 300px;">
        <option value="ConvertOnly">Convert Only</option>
        <option value="ConvertAndMerge">Convert and Merge</option>
        <option value="MergeOnly">Merge Only</option>
    </select>
</div>

<div>
    <label>Available Files in Uploads:</label>
    <ul id="fileList" style="list-style: none; padding-left: 0;">
        @foreach(var item in Model)
        {
            <li><label><input type="checkbox" value="@item" /> @item</label></li>
        }


    </ul>
</div>

<button id="processBtn" class="btn btn-primary mt-3">Start Processing</button>

<div id="result" class="mt-4 text-success"></div>
<div id="progress" style="max-height:100vh; overflow:auto;"></div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            
            $('#processBtn').click(function () {
                const selectedFiles = [];
                $('#fileList input[type="checkbox"]:checked').each(function () {
                    selectedFiles.push($(this).val());
                });

                if (selectedFiles.length === 0) {
                    alert("Please select at least one file.");
                    return;
                }

                const action = $('#actionType').val();

                $.ajax({
                    url: '/vob/ConvertSelected',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ FileNames: selectedFiles, Action: action }),
                    success: function (response) {
                        $('#result').html('Processing started. Task ID: ' + response.taskId);
                        checkProgress(response.taskId);
                    },
                    error: function (err) {
                        $('#result').html('<span class="text-danger">Error starting processing.</span>');
                    }
                });
            });
        });
        function checkProgress(taskId) {
            var interval = setInterval(function () {
                $.get('/Vob/GetProgress', { taskId: taskId }, function (data) {
                    var p = $('<p>').html(data.progressText); // Create a new paragraph element with the progress text
                    $('#progress').prepend(p); // Append the paragraph element to the progress div
                    if (data.isCompleted) {
                        $('#progress').prepend(p);

                        if (data.zipFilePath) {
                            // Create a hidden link element and trigger the download for the zip file
                            var zipLink = $('<a></a>').attr('href', data.zipFilePath).attr('download', '').appendTo('body');
                            zipLink[0].click();
                            zipLink.remove();
                        }
                        if (data.mergedFilePath) {
                            // Create a hidden link element and trigger the download for the merged file
                            var mergedLink = $('<a></a>').attr('href', data.mergedFilePath).attr('download', '').appendTo('body');
                            mergedLink[0].click();
                            mergedLink.remove();
                        }
                        clearInterval(interval);
                    }
                });
            }, 1000);
        }
    </script>
}
